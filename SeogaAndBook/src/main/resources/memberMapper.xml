<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 회원정보 처리 SQL -->
<!-- 마이바티스는 설정을 읽어서 등록을 미리 해놓는다 -->
<!-- 안의 내용을 객체로 구현해 놓고 싶은데 어떤애를 구현해야 할지 명시하는게 namespace -->
<!-- 즉 customermapper의 인터페이스를 구현하는 것은 여기 -->
<mapper namespace="cj.project.seogaandbook.mapper.MemberMapper">
	
	<!-- 회원 정보 등록 -->
	<insert id="signUp" parameterType="Member">
		INSERT INTO sab_members
			(memberNum, id, password, email)
		VALUES
			(sab_members_SEQ.nextval
			, #{id}
			, #{password}
			, #{email})
	</insert>
	
	<!-- 한 명의 회원 정보 가져오기 -->
	<select id="getMemberInfo" parameterType="int" resultType="Member">
		SELECT
			*
		FROM
			sab_members
		WHERE
			memberNum = #{value}
	</select>
	
	<!-- 아이디가 일치하는 회원 정보 가져오기 -->
	<select id="getMemberInfoById" parameterType="String" resultType="Member">
		SELECT
			*
		FROM
			sab_members
		WHERE
			id = #{value}
	</select>
	
	<!-- 이메일이 일치하는 회원 정보 가져오기 -->
	<select id="getMemberInfoByEmail" parameterType="String" resultType="Member">
		SELECT
			*
		FROM
			sab_members
		WHERE
			email = #{value}
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="update" parameterType="Member">
		UPDATE
			sab_members
		SET
			password = #{password},
			email = #{email}
		WHERE
			memberNum = #{memberNum}
	</update>
	
	<!-- 회원 정보 삭제 -->
	<delete id="delete" parameterType="String">
		DELETE FROM
			sab_members
		WHERE
			id = #{value}
	</delete>
</mapper>



























